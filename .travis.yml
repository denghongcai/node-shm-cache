os:
  - linux
  - osx

language: node_js

node_js:
  - "4"
  - "6"
  - "8"
  - "10"

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo sysctl -w kern.sysv.shmall=65536   ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo sysctl -w kern.sysv.shmmax=16777216; fi
  # get commit message
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  # put local node-pre-gyp on PATH
  - export PATH=./node_modules/.bin/:$PATH
  # put global node-gyp on PATH
  - npm install node-gyp -g
  # install node-pre-gyp-github so it is available for publishing
  - npm install -g node-pre-gyp-github
  # figure out if we should publish
  - PUBLISH_BINARY=false
  # if we are building a tag then publish
  - if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
  # or if we put [publish binary] in the commit message
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;
  
install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX=g++-4.8   ; fi
  # ensure source install works
  - npm install --build-from-source
  - npm test
  
before_script:
  # if publishing, do it
  - if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp package; node-pre-gyp-github publish --release; fi;
  # cleanup
  - node-pre-gyp clean
  - node-gyp clean
  
script:
  # if publishing, test installing from remote
  - INSTALL_RESULT=0
  - if [[ $PUBLISH_BINARY == true ]]; then INSTALL_RESULT=$(npm install --fallback-to-build=false > /dev/null)$? || true; fi;
  # if install returned non zero (errored) then we first unpublish and then call false so travis will bail at this line
  - if [[ $INSTALL_RESULT != 0 ]]; then echo "returned $INSTALL_RESULT";false; fi
  # If success then we arrive here so lets clean up
  - node-pre-gyp clean
  
after_success:
  # if success then query and display all published binaries
  - node-pre-gyp info
